

import pandas as pd
import string
import nltk
from nltk.corpus import stopwords
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn import metrics


nltk.download('stopwords')


df = pd.read_csv("spam.csv", encoding='latin-1')[['v1', 'v2']]
df.columns = ['label', 'message']


df['label'] = df['label'].map({'ham': 0, 'spam': 1})


def preprocess_text(text):
    
    text = text.lower()
   
    text = ''.join([char for char in text if char not in string.punctuation])
   
    tokens = text.split()
    tokens = [word for word in tokens if word not in stopwords.words('english')]
    return ' '.join(tokens)

df['message'] = df['message'].apply(preprocess_text)


X_train, X_test, y_train, y_test = train_test_split(df['message'], df['label'], test_size=0.2, random_state=42)


vectorizer = TfidfVectorizer()
X_train_tf = vectorizer.fit_transform(X_train)
X_test_tf = vectorizer.transform(X_test)


model = MultinomialNB()
model.fit(X_train_tf, y_train)


y_pred = model.predict(X_test_tf)


accuracy = metrics.accuracy_score(y_test, y_pred)
precision = metrics.precision_score(y_test, y_pred)
recall = metrics.recall_score(y_test, y_pred)

print("===== Email Spam Detection Results =====")
print(f"Accuracy  : {accuracy * 100:.2f}%")
print(f"Precision : {precision:.2f}")
print(f"Recall    : {recall:.2f}")
